type MobileApp {
    appId: ID!
    name: String!
    version: String
    platform: [String]
    author: Author
    releaseDate: Date
    downloaded: NonNegativeInt
    homepage: Url
    category: MobileAppCategory
}

# input objects are used as dynamic filters
# If an input object depends on another complex object,
# the inside object must be defined as input

# All input on filters are optional; this means the data resolver
# must handle the null possibility!
input MobileAppFilter {
    appId: ID
    name: String
    version: String
    platform: String
    author: AuthorFilter
    releasedAfter: Date
    minimumDownload: NonNegativeInt
    category: MobileAppCategory

}

# AuthorFilter is defined as input because it is used inside of another input object
# called MobileAppFilter - see above
input AuthorFilter {
    name: String
}

enum MobileAppCategory {
    GAME, PRODUCTIVITY, FINANCE, EDUCATION
}